// <auto-generated />
using System;
using EZHotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EZHotel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250815033544_seedDBUserRole")]
    partial class seedDBUserRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EZHotel.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("EZHotel.Models.Users.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("619d7706-770c-47ac-92a4-7e5c741edc78"),
                            Name = "Manager"
                        },
                        new
                        {
                            Id = new Guid("b0a9cc22-2046-45a6-accf-da011b819870"),
                            Name = "Staff"
                        },
                        new
                        {
                            Id = new Guid("6e44c69b-e62f-42cf-bd59-12f29e83a6dc"),
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("EZHotel.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EZHotel.Models.Users.Customer", b =>
                {
                    b.HasBaseType("EZHotel.Models.Users.User");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int?>("PreferredRoomType")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequest")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30785cf6-960b-4c7a-9f14-012e325eaedf"),
                            Address = "321 Main St",
                            Avatar = "",
                            Birthday = new DateTime(1995, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 15, 3, 35, 42, 265, DateTimeKind.Utc).AddTicks(9031),
                            Email = "customer@example.com",
                            FullName = "Quincy Thai",
                            HashPassword = "$2a$11$Y79OHzHIfzaDDnW6safgouXvaEkUAeyg4aA9Q.MsCnWmuHmNfBiI6",
                            IsActive = true,
                            PhoneNumber = "0934567890",
                            PublicId = "",
                            RoleId = new Guid("6e44c69b-e62f-42cf-bd59-12f29e83a6dc"),
                            UserName = "quincy",
                            LoyaltyPoints = 100,
                            Nationality = "Vietnam",
                            PassportNumber = "A12345678",
                            PaymentMethod = 1,
                            PreferredRoomType = 1,
                            SpecialRequest = "Late check-in"
                        });
                });

            modelBuilder.Entity("EZHotel.Models.Users.Staff", b =>
                {
                    b.HasBaseType("EZHotel.Models.Users.User");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Certifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bb57790-0eec-473d-94e4-768d2da58c18"),
                            Address = "456 Main St",
                            Avatar = "",
                            Birthday = new DateTime(1993, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 15, 3, 35, 41, 951, DateTimeKind.Utc).AddTicks(6893),
                            Email = "staff@example.com",
                            FullName = "Simon Nguyen",
                            HashPassword = "$2a$11$y2z6KOHHiyAge8MT3U8zLOM3TP2kzKAqBfZfSKBBC21PSmZRGzzyG",
                            IsActive = true,
                            PhoneNumber = "0987654321",
                            PublicId = "",
                            RoleId = new Guid("b0a9cc22-2046-45a6-accf-da011b819870"),
                            UserName = "simon",
                            BankAccount = "1234567890",
                            Certifications = "Hotel Management",
                            EmergencyContact = "0901234567",
                            EmployeeCode = "EMP001",
                            HireDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Leader - Customer Service",
                            Salary = 500m
                        });
                });

            modelBuilder.Entity("EZHotel.Models.Users.Manager", b =>
                {
                    b.HasBaseType("EZHotel.Models.Users.Staff");

                    b.Property<decimal>("ApprovalLimit")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("AuthorityLevel")
                        .HasColumnType("int");

                    b.Property<decimal>("PerformanceBonusRate")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6085050-f6d7-43d7-9fa3-c0b4e9ac279f"),
                            Address = "789 Main St",
                            Avatar = "",
                            Birthday = new DateTime(1999, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 8, 15, 3, 35, 42, 109, DateTimeKind.Utc).AddTicks(3477),
                            Email = "rogerhuynh2707@gmail.com",
                            FullName = "Roger Huynh",
                            HashPassword = "$2a$11$IIh7kGEAS4exB7SI18PifOGWF8Ea910ihVsRPLJ7QMeCsyOEeZC.O",
                            IsActive = true,
                            PhoneNumber = "0776198888",
                            PublicId = "",
                            RoleId = new Guid("619d7706-770c-47ac-92a4-7e5c741edc78"),
                            UserName = "roger",
                            BankAccount = "9876543210",
                            Certifications = "Leadership",
                            EmergencyContact = "0909876543",
                            EmployeeCode = "MGR001",
                            HireDate = new DateTime(2015, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Hotel Manager",
                            Salary = 2000m,
                            ApprovalLimit = 5000m,
                            AuthorityLevel = 3,
                            PerformanceBonusRate = 0.1m
                        });
                });

            modelBuilder.Entity("EZHotel.Models.Users.User", b =>
                {
                    b.HasOne("EZHotel.Models.Users.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EZHotel.Models.Users.Customer", b =>
                {
                    b.HasOne("EZHotel.Models.Users.User", null)
                        .WithOne()
                        .HasForeignKey("EZHotel.Models.Users.Customer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EZHotel.Models.Users.Staff", b =>
                {
                    b.HasOne("EZHotel.Models.Users.User", null)
                        .WithOne()
                        .HasForeignKey("EZHotel.Models.Users.Staff", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EZHotel.Models.Users.Manager", b =>
                {
                    b.HasOne("EZHotel.Models.Users.Staff", null)
                        .WithOne()
                        .HasForeignKey("EZHotel.Models.Users.Manager", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EZHotel.Models.Users.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
